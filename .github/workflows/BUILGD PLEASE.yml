name: Build and Deploy GRUB Bootable USB

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo DEBIAN_FRONTEND=noninteractive apt-get install -y autoconf automake bison flex gcc make xorriso libssl-dev gettext autopoint os-prober grub2-common
        echo "Dependencies installed"

    - name: Clone GRUB2 source
      run: |
        git clone git://git.savannah.gnu.org/grub.git
        cd grub
        git checkout grub-2.06

    - name: Build GRUB2
      run: |
        cd grub
        ./bootstrap
        ./configure
        make
        sudo make install

    - name: Convert font to pf2 format
      run: |
        # Replace the font file path with the actual path to your font file
        grub-mkfont -s 24 -o noto-sans-regular-24.pf2 NotoSans-Regular.ttf
        echo "Font converted to pf2 format"

    - name: Create ISO directory structure
      run: |
        mkdir -p iso/boot/grub
        cp grub/grub-core/boot.img iso/boot/grub
        cp /usr/local/lib/grub/i386-pc/*.mod iso/boot/grub
        # Include necessary libraries and binaries for the detect.sh script
        cp /usr/bin/os-prober iso/boot/grub
        # Add any additional libraries or binaries needed by the script

    - name: Add custom GRUB theme
      run: |
        mkdir -p iso/boot/grub/themes/default-theme
        cp theme.txt noto-sans-regular-24.pf2 iso/boot/grub/themes/default-theme/
        cp icons/* iso/boot/grub/themes/default-theme/
        echo 'GRUB_THEME="/boot/grub/themes/default-theme/theme.txt"' >> iso/boot/grub/grub.cfg

    - name: Add detect.sh script
      run: |
        cp detect.sh iso/boot/grub

    - name: Configure GRUB to execute detect.sh script
      run: |
        echo "exec tail -n +3 \$0" >> iso/boot/grub/grub.cfg
        echo "# Detect installed operating systems and generate GRUB configuration dynamically" >> iso/boot/grub/grub.cfg
        echo "source /boot/grub/detect.sh" >> iso/boot/grub/grub.cfg

    - name: Add Reset config to reset on boot
      run: |
        cp iso/boot/grub/grub.cfg iso/boot/grub/grub.reset.cfg

    - name: Create ISO image
      run: |
        grub-mkrescue -o grub2.iso iso

    - name: Upload ISO artifact
      uses: actions/upload-artifact@v4
      with:
        name: grub2.iso
        path: grub2.iso
